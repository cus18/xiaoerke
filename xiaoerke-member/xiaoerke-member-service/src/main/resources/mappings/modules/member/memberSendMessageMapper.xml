<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cxqm.xiaoerke.modules.member.dao.MemberSendMessageDao" >
  <resultMap id="BaseResultMap" type="com.cxqm.xiaoerke.modules.member.entity.MemberSendMessageVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, openid, status, create_date, update_date, create_by
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from member_send_message
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByOpenId" resultMap="BaseResultMap" parameterType="com.cxqm.xiaoerke.modules.member.entity.MemberSendMessageVo" >
    select
    <include refid="Base_Column_List" />
    from member_send_message
    where openid = #{openid,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from member_send_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cxqm.xiaoerke.modules.member.entity.MemberSendMessageVo" >
    insert into member_send_message ( openid, status,
      create_date, update_date, create_by
      )
    values (#{openid,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR},
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cxqm.xiaoerke.modules.member.entity.MemberSendMessageVo" >
    insert into member_send_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="openid != null" >
        openid,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cxqm.xiaoerke.modules.member.entity.MemberSendMessageVo" >
    update member_send_message
    <set >
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>


  <update id="updateByOpenid" parameterType="com.cxqm.xiaoerke.modules.member.entity.MemberSendMessageVo" >
    update member_send_message
    set status = #{status}
    where openid = #{openid,jdbcType=VARCHAR}
  </update>


  <update id="updateByPrimaryKey" parameterType="com.cxqm.xiaoerke.modules.member.entity.MemberSendMessageVo" >
    update member_send_message
    set openid = #{openid,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>