<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cxqm.xiaoerke.modules.umbrella.dao.BabyUmbrellaInfoDao" >
    <resultMap id="BaseResultMap" type="com.cxqm.xiaoerke.modules.umbrella.entity.BabyUmbrellaInfo" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="openid" property="openid" jdbcType="VARCHAR" />
        <result column="money" property="money" jdbcType="INTEGER" />
        <result column="umbrella_money" property="umbrellaMoney" jdbcType="INTEGER" />
        <result column="baby_id" property="babyId" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="DATE" />
        <result column="parent_idcard" property="parentIdCard" jdbcType="VARCHAR" />
        <result column="parent_phone" property="parentPhone" jdbcType="VARCHAR" />
        <result column="parent_name" property="parentName" jdbcType="VARCHAR" />
        <result column="parent_type" property="parentType" jdbcType="INTEGER" />
        <result column="activation_time" property="activationTime" jdbcType="DATE" />
        <result column="true_pay_moneys" property="truePayMoneys" jdbcType="VARCHAR" />
        <result column="pay_result" property="payResult" jdbcType="VARCHAR" />
        <result column="version" property="version" jdbcType="VARCHAR" />
        <result column="update_time" property="updateTime" jdbcType="DATE" />
    </resultMap>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
         *
        from baby_umbrellainfo
        where id = #{id,jdbcType=INTEGER}
    </select>


    <select id="getBabyUmbrellaInfo" resultType="java.util.HashMap" >
        select * from baby_umbrellainfo
        where 1=1
        <if test="today != null">
            and create_time like '${today}%' and pay_result!='fail'
        </if>
        <if test="openid != null">
            and openid = #{openid}
        </if>
        <if test="notActive != null">
            and baby_id is NULL
        </if>
        <if test="notShare != null">
            and ifshare is NULL
        </if>
        <if test="id != null">
            and id = #{id}
        </if>
        <if test="notShareOrActiveDays != null">
            and DATEDIFF(NOW(),create_time) = #{notShareOrActiveDays}
        </if>
    </select>

    <!--<select id="getBabyUmbrellaInfoTotal" resultType="java.lang.Integer" >-->
        <!--select count(*) from baby_umbrellainfo-->
        <!--where 1=1-->
        <!--<if test="today != null">-->
            <!--and create_time like '${today}%'-->
        <!--</if>-->
        <!--<if test="userNums != null">-->
            <!--and create_time like '${date}%'-->
        <!--</if>-->
        <!--<if test="openid != null">-->
            <!--and openid = #{openid}-->
        <!--</if>-->
    <!--</select>-->


    <select id="getBabyUmbrellaInfoTotal" resultType="java.lang.Integer" >
        select (select count(*) from `baby_umbrellainfo` bl where bl.`create_time` &lt; now() and (bl.`pay_result`='success' OR bl.`pay_result` is null) and `baby_id` is not null and `baby_id` !='' and bl.openid !='')
        +(select count(*)*2 from `baby_umbrellainfo` bl where bl.`create_time` &lt; now()  and (bl.`pay_result`='success' OR bl.`pay_result` is null) and `baby_id` is  null and bl.openid !='')
        +(select count(*) from `umbrella_familyinfo` where `umbrella_id` in ( select id from `baby_umbrellainfo` bl where bl.`create_time` &lt; now()  and (bl.`pay_result`='success' OR bl.`pay_result` is null) and bl.openid !='')) as a
    </select>

    <select id="getTotalBabyUmbrellaInfoMoney" resultType="java.lang.Integer" >
        select IFNULL(sum(umbrella_money),0) from baby_umbrellainfo
        where 1=1
        <if test="openid != null">
            and openid = #{openid}
        </if>
    </select>


    <insert id="saveBabyUmbrellaInfo" parameterType="com.cxqm.xiaoerke.modules.umbrella.entity.BabyUmbrellaInfo" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `baby_umbrellainfo` ( `openid`,create_time,umbrella_money,version
        <if test="truePayMoneys != null">
            ,true_pay_moneys,pay_result
        </if>
        <if test="activationTime != null">
            ,activation_time
        </if>
        )
        VALUES
        ( #{openid},now(),#{umbrellaMoney},#{version}
        <if test="truePayMoneys != null">
         , #{truePayMoneys},#{payResult}
        </if>
        <if test="activationTime != null">
            ,now()
        </if>
        );
    </insert>


    <update id="updateBabyUmbrellaInfo" parameterType="com.cxqm.xiaoerke.modules.umbrella.entity.BabyUmbrellaInfo" >
        update baby_umbrellainfo
        set
        money = 5,
        parent_idcard=#{parentIdCard},
        parent_phone=#{parentPhone},
        parent_name=#{parentName},
        parent_type=#{parentType},
        baby_id=#{babyId},
        activation_time=now()
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateBabyUmbrellaInfoById" parameterType="com.cxqm.xiaoerke.modules.umbrella.entity.BabyUmbrellaInfo" >
        update baby_umbrellainfo
        <set>
            <if test="umberllaMoney != null">
                umbrella_money = #{umberllaMoney},
            </if>
            <if test="activationTime != null">
                activation_time = now(),
            </if>
            <if test="truePayMoneys != null">
                true_pay_moneys = #{truePayMoneys},
            </if>
            <if test="payResult != null">
                pay_result = #{payResult},
            </if>
            <if test="friendJoinNum != null">
                friendJoinNum = #{friendJoinNum},
            </if>
            <if test="openid != null">
                openid = #{openid},
            </if>
            <if test="source != null">
                source = #{source}
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="getUserShareNums" resultType="java.lang.Integer" >
        select count(DISTINCT openid) from `sys_attention` where `marketer`=#{id} and status=0
    </select>

    <select id="getOpenidStatus" resultType="java.util.HashMap" >
        select * from `sys_attention` sa where sa.`openid`=#{openid} order by date desc limit 1
    </select>

    <select id="getNotShareInfoFromLog" resultType="java.util.Map" >
        select title from sys_log where open_id = #{openid} and title in ('Umbrella_shareMoment','Umbrella_shareFirend')
    </select>

    <select id="getUmbrellaCount" resultType="java.lang.Integer" >
        select count(*) from baby_umbrellainfo where openid!='' and openid is not null
    </select>

    <update id="updateBabyUmbrellaInfoIfShare" parameterType="com.cxqm.xiaoerke.modules.umbrella.entity.BabyUmbrellaInfo" >
        update baby_umbrellainfo
        set
        ifshare = 1
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <insert id="newSaveBabyUmbrellaInfo" parameterType="com.cxqm.xiaoerke.modules.umbrella.entity.BabyUmbrellaInfo" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `baby_umbrellainfo`
        (
        openid,create_time,baby_id,parent_idcard,parent_phone,parent_name,parent_type,true_pay_moneys,pay_result,umbrella_money,money,source
        )
        VALUES
        (
         #{openid},now(),#{babyId},#{parentIdCard},#{parentPhone},#{parentName},#{parentType},#{truePayMoneys},#{payResult},#{umbrellaMoney},#{money},#{source}
        )
    </insert>

    <update id="updateBabyUmbrellaInfoStatus" parameterType="com.cxqm.xiaoerke.modules.umbrella.entity.BabyUmbrellaInfo" >
        update baby_umbrellainfo
        set
        pay_result = 'success' , update_time = now()
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <delete id="deleteUmbrellaByOpenid" parameterType="java.lang.String" >
        delete from baby_umbrellainfo
        where openid = #{openid}
    </delete>

    <select id="getUmbrellaRank" resultType="java.lang.Integer" >
        select count(*) from baby_umbrellainfo
        where create_time&lt;#{createTime} and (pay_result='success' or pay_result is null)
    </select>

    <!--根据手机号或者openid查询该用户是否购买-->
    <select id="getIfBuyUmbrellaByOpenidOrPhone" parameterType="java.util.Map" resultType="java.util.Map" >
        SELECT id,parent_phone,parent_name,pay_result from baby_umbrellainfo
        where pay_result='success'
        <if test="userPhone != null and userPhone != ''">
            and parent_phone=#{userPhone}
        </if>
        <if test="openId != null and openId != ''">
            and openid=#{openId}
        </if>
    </select>

    <!--根据手机号查询该用户是否关注平台-->
    <select id="getStatusByPhone" parameterType="java.util.Map" resultType="java.util.Map" >
        SELECT status from sys_attention sa
        INNER JOIN baby_umbrellainfo bum
        ON sa.openid=bum.openid
        where bum.parent_phone=#{userPhone}
        ORDER BY sa.date desc LIMIT 1
    </select>

    <select id="getBabyUmbrellaInfoTotalUser" parameterType="java.util.Map" resultType="java.lang.Integer" >
        select (
        select count(*) from `baby_umbrellainfo` bl
        where 1=1
        <if test="date != null">
            and bl.`create_time` &lt; #{date}
        </if>
        and (bl.`pay_result`='success' OR bl.`pay_result` is null)
        and `baby_id` is not null
        and `baby_id` !=''
        and bl.openid !=''
        )

        +(select count(*)*2 from `baby_umbrellainfo` bl
        where 1=1
        <if test="date != null">
            and bl.`create_time` &lt; #{date}
        </if>
        and (bl.`pay_result`='success' OR bl.`pay_result` is null)
        and `baby_id` is null
        and bl.openid !=''
        )

        +(select count(*) from `umbrella_familyinfo`
        where `umbrella_id` in
        (select id from `baby_umbrellainfo` bl
        where 1=1
        <if test="date != null">
            and bl.`create_time` &lt; #{date}
        </if>
        and (bl.`pay_result`='success' OR bl.`pay_result` is null)
        and bl.openid !=''
        )
        )

        as a
    </select>

    <select id="getBabyUmbrellaInfoTotalFamily" parameterType="java.util.Map" resultType="java.lang.Integer" >
        select count(*) from `baby_umbrellainfo` bl
        where 1=1
        <if test="date != null">
            and  bl.`create_time` &lt; #{date}
        </if>
        and (bl.`pay_result`='success' OR bl.`pay_result` is null)
        and bl.openid !=''
    </select>


</mapper>