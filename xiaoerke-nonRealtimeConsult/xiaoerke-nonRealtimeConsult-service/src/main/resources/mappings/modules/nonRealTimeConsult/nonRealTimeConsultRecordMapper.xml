<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cxqm.xiaoerke.modules.nonRealTimeConsult.dao.NonRealTimeConsultRecordDao" >
  <resultMap id="BaseResultMap" type="com.cxqm.xiaoerke.modules.nonRealTimeConsult.entity.NonRealTimeConsultRecordVo" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="session_id" property="sessionId" jdbcType="INTEGER" />
    <result column="sender_id" property="senderId" jdbcType="VARCHAR" />
    <result column="sys_user_id" property="sysUserId" jdbcType="VARCHAR" />
    <result column="cs_user_id" property="csUserId" jdbcType="VARCHAR" />
    <result column="doctor_name" property="doctorName" jdbcType="VARCHAR" />
    <result column="message_type" property="messageType" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="bak_1" property="bak1" jdbcType="VARCHAR" />
    <result column="bak_2" property="bak2" jdbcType="VARCHAR" />
    <result column="bak_3" property="bak3" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.cxqm.xiaoerke.modules.nonRealTimeConsult.entity.NonRealTimeConsultRecordVo" extends="BaseResultMap" >
    <result column="message" property="message" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Blob_Column_List" >
    message
  </sql>
  <insert id="insert" parameterType="com.cxqm.xiaoerke.modules.nonRealTimeConsult.entity.NonRealTimeConsultRecordVo" >
    insert into non_real_time_consult_record (id, session_id, sender_id, 
      sys_user_id, cs_user_id, doctor_name, 
      message_type, user_name, create_time, 
      update_time, bak_1, bak_2, 
      bak_3, message)
    values (#{id,jdbcType=INTEGER}, #{sessionId,jdbcType=INTEGER}, #{senderId,jdbcType=VARCHAR}, 
      #{sysUserId,jdbcType=VARCHAR}, #{csUserId,jdbcType=VARCHAR}, #{doctorName,jdbcType=VARCHAR}, 
      #{messageType,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{bak1,jdbcType=VARCHAR}, #{bak2,jdbcType=VARCHAR}, 
      #{bak3,jdbcType=VARCHAR}, #{message,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cxqm.xiaoerke.modules.nonRealTimeConsult.entity.NonRealTimeConsultRecordVo" >
    insert into non_real_time_consult_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sessionId != null" >
        session_id,
      </if>
      <if test="senderId != null" >
        sender_id,
      </if>
      <if test="sysUserId != null" >
        sys_user_id,
      </if>
      <if test="csUserId != null" >
        cs_user_id,
      </if>
      <if test="doctorName != null" >
        doctor_name,
      </if>
      <if test="messageType != null" >
        message_type,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="bak1 != null" >
        bak_1,
      </if>
      <if test="bak2 != null" >
        bak_2,
      </if>
      <if test="bak3 != null" >
        bak_3,
      </if>
      <if test="message != null" >
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sessionId != null" >
        #{sessionId,jdbcType=INTEGER},
      </if>
      <if test="senderId != null" >
        #{senderId,jdbcType=VARCHAR},
      </if>
      <if test="sysUserId != null" >
        #{sysUserId,jdbcType=VARCHAR},
      </if>
      <if test="csUserId != null" >
        #{csUserId,jdbcType=VARCHAR},
      </if>
      <if test="doctorName != null" >
        #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="messageType != null" >
        #{messageType,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bak1 != null" >
        #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null" >
        #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null" >
        #{bak3,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <select id="selectSessionRecordByVo" resultMap="ResultMapWithBLOBs" parameterType="com.cxqm.xiaoerke.modules.nonRealTimeConsult.entity.NonRealTimeConsultRecordVo" >
    select *
    from non_real_time_consult_record
    where 1=1
    <if test="id != null" >
      and id =  #{id,jdbcType=INTEGER}
    </if>
    <if test="sessionId != null" >
      and session_id = #{sessionId,jdbcType=INTEGER}
    </if>
    <if test="senderId != null" >
      and #{senderId,jdbcType=VARCHAR}
    </if>
    <if test="sysUserId != null" >
      and #{sysUserId,jdbcType=VARCHAR}
    </if>
    <if test="csUserId != null" >
      and #{csUserId,jdbcType=VARCHAR}
    </if>
    <if test="doctorName != null" >
      and #{doctorName,jdbcType=VARCHAR}
    </if>
    <if test="messageType != null" >
      and #{messageType,jdbcType=VARCHAR}
    </if>
    <if test="userName != null" >
      and #{userName,jdbcType=VARCHAR}
    </if>
    <if test="createTime != null" >
      and #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateTime != null" >
      and #{updateTime,jdbcType=TIMESTAMP}
    </if>
    <if test="bak1 != null" >
      and #{bak1,jdbcType=VARCHAR}
    </if>
    <if test="bak2 != null" >
      and #{bak2,jdbcType=VARCHAR}
    </if>
    <if test="bak3 != null" >
      and #{bak3,jdbcType=VARCHAR}
    </if>
    <if test="message != null" >
      and #{message,jdbcType=LONGVARCHAR}
    </if>
    <if test="order == 'createTimeAsc'" >
      order by create_time asc
    </if>
    <if test="order == 'createTimeDesc'" >
      order by create_time desc
    </if>
  </select>
</mapper>