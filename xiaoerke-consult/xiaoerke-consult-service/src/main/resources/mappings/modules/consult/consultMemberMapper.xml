<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cxqm.xiaoerke.modules.consult.dao.ConsultMemberDao" >
  <resultMap id="BaseResultMap" type="com.cxqm.xiaoerke.modules.consult.entity.ConsultMemberVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="pay_acount" property="payAcount" jdbcType="VARCHAR" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="member_type" property="memberType" jdbcType="VARCHAR" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, nickname, create_date, pay_acount, end_time,member_type,openid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from consult_member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByopenid" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from consult_member
    where openid = #{openid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from consult_member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cxqm.xiaoerke.modules.consult.entity.ConsultMemberVo" >
    insert into consult_member (id, nickname, create_date, 
      pay_acount, end_time,member_type,openid)
    values (#{id,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{payAcount,jdbcType=VARCHAR}, #{endTime,jdbcType=TIMESTAMP}, #{memberType,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cxqm.xiaoerke.modules.consult.entity.ConsultMemberVo" >
    insert into consult_member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="payAcount != null" >
        pay_acount,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="memberType != null" >
        member_type,
      </if>
      <if test="openid != null" >
        openid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payAcount != null" >
        #{payAcount,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memberType != null" >
        #{member_type,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cxqm.xiaoerke.modules.consult.entity.ConsultMemberVo" >
    update consult_member
    <set >
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payAcount != null" >
        pay_acount = #{payAcount,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cxqm.xiaoerke.modules.consult.entity.ConsultMemberVo" >
    update consult_member
    set nickname = #{nickname,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      pay_acount = #{payAcount,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>